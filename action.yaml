name: Install IMDReader
description: Install IMDReader
inputs:
  branch:
    description: >
      Branch of IMDReader to install.
    required: true
    default: main
  installer:
    description: >
      Installer to use.
      Must be one of pip, conda, mamba, or micromamba.
    required: true
    default: pip
  shell:
    description: >
      Which shell to use.
      If you have a conda environment, you should
      use `bash -l {0}`.
      If you are using pip, you should use `bash`,
      as `bash -l {0}` can fail on Mac runners.
    required: true
    default: bash
outputs:
  installed-version:
    description: Installed IMDReader version
    value: "${{ steps.print-version.outputs.installed-version }}"


runs:
  # Composite actions collect workflow job steps into an action
  using: "composite"
  steps:
    - name: Set installer
      id: setup-installer
      shell: ${{ inputs.shell }}
      run: |
        case ${{ inputs.installer }} in
            pip|conda|mamba|micromamba) true ;;
            *)
              printf "${{ inputs.installer }} is not a valid installer; must be one of pip, conda, mamba, micromamba"
              exit 1
              ;;
        esac

        INSTALLER="${{ inputs.installer }}"

        echo "installer=${INSTALLER}" >> $GITHUB_OUTPUT

    - name: Setup install lines
      id: setup-install-line
      shell: ${{ inputs.shell }}
      run: |
        _INSTALL_LINE="'git+https://github.com/Becksteinlab/imdreader@${{ inputs.branch }}#egg=imdreader'"
        echo "Install line: ${_INSTALL_LINE}"
        echo "install-line=${_INSTALL_LINE}" >> $GITHUB_OUTPUT
    
    - name: Install with conda
      if: steps.setup-installer.outputs.installer != 'pip'
      shell: ${{ inputs.shell }}
      run: ${{ inputs.installer }} install -y -c conda-forge ${{ steps.setup-install-line.outputs.install-line }}

    - name: Install with pip
      if: steps.setup-installer.outputs.installer == 'pip'
      shell: ${{ inputs.shell }}
      run: python -m pip install ${{ steps.setup-install-line.outputs.install-line }}

    - name: Get final version
      id: print-version
      shell: ${{ inputs.shell }}
      run: |
        pyver=$(python -c 'import imdreader; print(imdreader.__version__)')
        echo "installed-version=${pyver}" >> $GITHUB_OUTPUT